{"version":3,"sources":["app.js","material.js","ripples.js","admin.js"],"names":[],"mappingspnpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["function fishtankGaugeData() {\n\n   $.ajax({\n      url: 'api/v1/drawgauge',\n      dataType: 'json',\n      success: function( data ) {\n        drawGauge( data );\n      },\n      error: function( req, status, err ) {\n        console.log( 'creating drawGauge went wrong', status, err );\n      }\n    });\n}\n\nfunction fishtankChartData() {\n\n   $.ajax({\n      url: 'api/v1/drawlinechart',\n      dataType: 'json',\n      success: function( data ) {\n        drawChart( data );\n      },\n      error: function( req, status, err ) {\n        console.log( 'creating chartData went wrong', status, err );\n      }\n    });\n}\n\n\ngoogle.charts.load('current', {'packages':['gauge', 'line'], 'callback': drawCharts});\n\nfunction drawCharts() {\n  fishtankGaugeData();\n  fishtankChartData();\n}\n\nfunction drawGauge( data ) {\n\n    var gaugeOptions = {\n        min: 0,\n        max: 50,\n        yellowFrom: (data.alarmtemp/1000),\n        yellowTo: (data.criticaltemp/1000),\n        redFrom: (data.criticaltemp/1000),\n        redTo: 50,\n        minorTicks: 5,\n        animation: 500,\n        width:380\n    };\n    var gauge;\n\n    gaugeData = new google.visualization.DataTable();\n    gaugeData.addColumn('number', 'Water');\n    gaugeData.addColumn('number', 'Air');\n    gaugeData.addRows(2);\n    gaugeData.setCell(0, 0, (data.water / 1000) );\n    gaugeData.setCell(0, 1, (data.air / 1000) );\n\n    gauge = new google.visualization.Gauge( document.getElementById('gauge-div') );\n    gauge.draw( gaugeData, gaugeOptions );\n}\n\nfunction drawChart( chartData ) {\n\n    var chartOptions = {\n        height: 300\n    };\n    var linechart;\n    var fishData = [];\n\n    chartData.data.forEach( function( item ) {\n        fishData.push ( [item.time, (item.water/1000), (item.air/1000)] );\n    });\n\n    fishData.reverse();\n\n    linechart = new google.visualization.DataTable();\n    linechart.addColumn('string');\n    linechart.addColumn('number', 'Water');\n    linechart.addColumn('number', 'Air');\n\n    linechart.addRows( fishData );\n\n    var chart = new google.charts.Line( document.getElementById('linechart-div') );\n\n    chart.draw( linechart, chartOptions );\n}\n\n\n$( document ).ready(function() {\n  // This command is used to initialize some elements and make them work properly\n  $.material.init();\n\n\n  setInterval(function(){\n    fishtankGaugeData();\n    fishtankChartData();\n  }, 60000);\n\n});\n","/* globals jQuery */\n\n(function ($) {\n  // Selector to select only not already processed elements\n  $.expr[\":\"].notmdproc = function (obj) {\n    if ($(obj).data(\"mdproc\")) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  function _isChar(evt) {\n    if (typeof evt.which == \"undefined\") {\n      return true;\n    } else if (typeof evt.which == \"number\" && evt.which > 0) {\n      return (\n        !evt.ctrlKey\n        && !evt.metaKey\n        && !evt.altKey\n        && evt.which != 8  // backspace\n        && evt.which != 9  // tab\n        && evt.which != 13 // enter\n        && evt.which != 16 // shift\n        && evt.which != 17 // ctrl\n        && evt.which != 20 // caps lock\n        && evt.which != 27 // escape\n      );\n    }\n    return false;\n  }\n\n  function _addFormGroupFocus(element) {\n    var $element = $(element);\n    if (!$element.prop('disabled')) {  // this is showing as undefined on chrome but works fine on firefox??\n      $element.closest(\".form-group\").addClass(\"is-focused\");\n    }\n  }\n\n  function _toggleTypeFocus($input) {\n    $input.closest('label').hover(function () {\n      var $i = $(this).find('input');\n      if (!$i.prop('disabled')) { // hack because the _addFormGroupFocus() wasn't identifying the property on chrome\n        _addFormGroupFocus($i);     // need to find the input so we can check disablement\n      }\n    }, function () {\n      _removeFormGroupFocus($(this).find('input'));\n    });\n  }\n\n  function _removeFormGroupFocus(element) {\n    $(element).closest(\".form-group\").removeClass(\"is-focused\"); // remove class from form-group\n  }\n\n  $.material = {\n    \"options\": {\n      // These options set what will be started by $.material.init()\n      \"validate\": true,\n      \"input\": true,\n      \"ripples\": true,\n      \"checkbox\": true,\n      \"togglebutton\": true,\n      \"radio\": true,\n      \"arrive\": true,\n      \"autofill\": false,\n\n      \"withRipples\": [\n        \".btn:not(.btn-link)\",\n        \".card-image\",\n        \".navbar a:not(.withoutripple)\",\n        \".dropdown-menu a\",\n        \".nav-tabs a:not(.withoutripple)\",\n        \".withripple\",\n        \".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"\n      ].join(\",\"),\n      \"inputElements\": \"input.form-control, textarea.form-control, select.form-control\",\n      \"checkboxElements\": \".checkbox > label > input[type=checkbox]\",\n      \"togglebuttonElements\": \".togglebutton > label > input[type=checkbox]\",\n      \"radioElements\": \".radio > label > input[type=radio]\"\n    },\n    \"checkbox\": function (selector) {\n      // Add fake-checkbox to material checkboxes\n      var $input = $((selector) ? selector : this.options.checkboxElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='checkbox-material'><span class='check'></span></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"togglebutton\": function (selector) {\n      // Add fake-checkbox to material checkboxes\n      var $input = $((selector) ? selector : this.options.togglebuttonElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='toggle'></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"radio\": function (selector) {\n      // Add fake-radio to material radios\n      var $input = $((selector) ? selector : this.options.radioElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .after(\"<span class='circle'></span><span class='check'></span>\");\n\n      _toggleTypeFocus($input);\n    },\n    \"input\": function (selector) {\n      $((selector) ? selector : this.options.inputElements)\n        .filter(\":notmdproc\")\n        .data(\"mdproc\", true)\n        .each(function () {\n          var $input = $(this);\n\n          // Requires form-group standard markup (will add it if necessary)\n          var $formGroup = $input.closest(\".form-group\"); // note that form-group may be grandparent in the case of an input-group\n          if ($formGroup.length === 0) {\n            $input.wrap(\"<div class='form-group'></div>\");\n            $formGroup = $input.closest(\".form-group\"); // find node after attached (otherwise additional attachments don't work)\n          }\n\n          // Legacy - Add hint label if using the old shorthand data-hint attribute on the input\n          if ($input.attr(\"data-hint\")) {\n            $input.after(\"<p class='help-block'>\" + $input.attr(\"data-hint\") + \"</p>\");\n            $input.removeAttr(\"data-hint\");\n          }\n\n          // Legacy - Change input-sm/lg to form-group-sm/lg instead (preferred standard and simpler css/less variants)\n          var legacySizes = {\n            \"input-lg\": \"form-group-lg\",\n            \"input-sm\": \"form-group-sm\"\n          };\n          $.each(legacySizes, function (legacySize, standardSize) {\n            if ($input.hasClass(legacySize)) {\n              $input.removeClass(legacySize);\n              $formGroup.addClass(standardSize);\n            }\n          });\n\n          // Legacy - Add label-floating if using old shorthand <input class=\"floating-label\" placeholder=\"foo\">\n          if ($input.hasClass(\"floating-label\")) {\n            var placeholder = $input.attr(\"placeholder\");\n            $input.attr(\"placeholder\", null).removeClass(\"floating-label\");\n            var id = $input.attr(\"id\");\n            var forAttribute = \"\";\n            if (id) {\n              forAttribute = \"for='\" + id + \"'\";\n            }\n            $formGroup.addClass(\"label-floating\");\n            $input.after(\"<label \" + forAttribute + \"class='control-label'>\" + placeholder + \"</label>\");\n          }\n\n          // Set as empty if is empty (damn I must improve this...)\n          if ($input.val() === null || $input.val() == \"undefined\" || $input.val() === \"\") {\n            $formGroup.addClass(\"is-empty\");\n          }\n\n          // Add at the end of the form-group\n          $formGroup.append(\"<span class='material-input'></span>\");\n\n          // Support for file input\n          if ($formGroup.find(\"input[type=file]\").length > 0) {\n            $formGroup.addClass(\"is-fileinput\");\n          }\n        });\n    },\n    \"attachInputEventHandlers\": function () {\n      var validate = this.options.validate;\n\n      $(document)\n        .on(\"change\", \".checkbox input[type=checkbox]\", function () {\n          $(this).blur();\n        })\n        .on(\"keydown paste\", \".form-control\", function (e) {\n          if (_isChar(e)) {\n            $(this).closest(\".form-group\").removeClass(\"is-empty\");\n          }\n        })\n        .on(\"keyup change\", \".form-control\", function () {\n          var $input = $(this);\n          var $formGroup = $input.closest(\".form-group\");\n          var isValid = (typeof $input[0].checkValidity === \"undefined\" || $input[0].checkValidity());\n\n          if ($input.val() === \"\") {\n            $formGroup.addClass(\"is-empty\");\n          }\n          else {\n            $formGroup.removeClass(\"is-empty\");\n          }\n\n          // Validation events do not bubble, so they must be attached directly to the input: http://jsfiddle.net/PEpRM/1/\n          //  Further, even the bind method is being caught, but since we are already calling #checkValidity here, just alter\n          //  the form-group on change.\n          //\n          // NOTE: I'm not sure we should be intervening regarding validation, this seems better as a README and snippet of code.\n          //        BUT, I've left it here for backwards compatibility.\n          if (validate) {\n            if (isValid) {\n              $formGroup.removeClass(\"has-error\");\n            }\n            else {\n              $formGroup.addClass(\"has-error\");\n            }\n          }\n        })\n        .on(\"focus\", \".form-control, .form-group.is-fileinput\", function () {\n          _addFormGroupFocus(this);\n        })\n        .on(\"blur\", \".form-control, .form-group.is-fileinput\", function () {\n          _removeFormGroupFocus(this);\n        })\n        // make sure empty is added back when there is a programmatic value change.\n        //  NOTE: programmatic changing of value using $.val() must trigger the change event i.e. $.val('x').trigger('change')\n        .on(\"change\", \".form-group input\", function () {\n          var $input = $(this);\n          if ($input.attr(\"type\") == \"file\") {\n            return;\n          }\n\n          var $formGroup = $input.closest(\".form-group\");\n          var value = $input.val();\n          if (value) {\n            $formGroup.removeClass(\"is-empty\");\n          } else {\n            $formGroup.addClass(\"is-empty\");\n          }\n        })\n        // set the fileinput readonly field with the name of the file\n        .on(\"change\", \".form-group.is-fileinput input[type='file']\", function () {\n          var $input = $(this);\n          var $formGroup = $input.closest(\".form-group\");\n          var value = \"\";\n          $.each(this.files, function (i, file) {\n            value += file.name + \", \";\n          });\n          value = value.substring(0, value.length - 2);\n          if (value) {\n            $formGroup.removeClass(\"is-empty\");\n          } else {\n            $formGroup.addClass(\"is-empty\");\n          }\n          $formGroup.find(\"input.form-control[readonly]\").val(value);\n        });\n    },\n    \"ripples\": function (selector) {\n      $((selector) ? selector : this.options.withRipples).ripples();\n    },\n    \"autofill\": function () {\n      // This part of code will detect autofill when the page is loading (username and password inputs for example)\n      var loading = setInterval(function () {\n        $(\"input[type!=checkbox]\").each(function () {\n          var $this = $(this);\n          if ($this.val() && $this.val() !== $this.attr(\"value\")) {\n            $this.trigger(\"change\");\n          }\n        });\n      }, 100);\n\n      // After 10 seconds we are quite sure all the needed inputs are autofilled then we can stop checking them\n      setTimeout(function () {\n        clearInterval(loading);\n      }, 10000);\n    },\n    \"attachAutofillEventHandlers\": function () {\n      // Listen on inputs of the focused form (because user can select from the autofill dropdown only when the input has focus)\n      var focused;\n      $(document)\n        .on(\"focus\", \"input\", function () {\n          var $inputs = $(this).parents(\"form\").find(\"input\").not(\"[type=file]\");\n          focused = setInterval(function () {\n            $inputs.each(function () {\n              var $this = $(this);\n              if ($this.val() !== $this.attr(\"value\")) {\n                $this.trigger(\"change\");\n              }\n            });\n          }, 100);\n        })\n        .on(\"blur\", \".form-group input\", function () {\n          clearInterval(focused);\n        });\n    },\n    \"init\": function (options) {\n      this.options = $.extend({}, this.options, options);\n      var $document = $(document);\n\n      if ($.fn.ripples && this.options.ripples) {\n        this.ripples();\n      }\n      if (this.options.input) {\n        this.input();\n        this.attachInputEventHandlers();\n      }\n      if (this.options.checkbox) {\n        this.checkbox();\n      }\n      if (this.options.togglebutton) {\n        this.togglebutton();\n      }\n      if (this.options.radio) {\n        this.radio();\n      }\n      if (this.options.autofill) {\n        this.autofill();\n        this.attachAutofillEventHandlers();\n      }\n\n      if (document.arrive && this.options.arrive) {\n        if ($.fn.ripples && this.options.ripples) {\n          $document.arrive(this.options.withRipples, function () {\n            $.material.ripples($(this));\n          });\n        }\n        if (this.options.input) {\n          $document.arrive(this.options.inputElements, function () {\n            $.material.input($(this));\n          });\n        }\n        if (this.options.checkbox) {\n          $document.arrive(this.options.checkboxElements, function () {\n            $.material.checkbox($(this));\n          });\n        }\n        if (this.options.radio) {\n          $document.arrive(this.options.radioElements, function () {\n            $.material.radio($(this));\n          });\n        }\n        if (this.options.togglebutton) {\n          $document.arrive(this.options.togglebuttonElements, function () {\n            $.material.togglebutton($(this));\n          });\n        }\n\n      }\n    }\n  };\n\n})(jQuery);\n","/* Copyright 2014+, Federico Zivolo, LICENSE at https://github.com/FezVrasta/bootstrap-material-design/blob/master/LICENSE.md */\n/* globals jQuery, navigator */\n\n(function($, window, document, undefined) {\n\n  \"use strict\";\n\n  /**\n   * Define the name of the plugin\n   */\n  var ripples = \"ripples\";\n\n\n  /**\n   * Get an instance of the plugin\n   */\n  var self = null;\n\n\n  /**\n   * Define the defaults of the plugin\n   */\n  var defaults = {};\n\n\n  /**\n   * Create the main plugin function\n   */\n  function Ripples(element, options) {\n    self = this;\n\n    this.element = $(element);\n\n    this.options = $.extend({}, defaults, options);\n\n    this._defaults = defaults;\n    this._name = ripples;\n\n    this.init();\n  }\n\n\n  /**\n   * Initialize the plugin\n   */\n  Ripples.prototype.init = function() {\n    var $element  = this.element;\n\n    $element.on(\"mousedown touchstart\", function(event) {\n      /**\n       * Verify if the user is just touching on a device and return if so\n       */\n      if(self.isTouch() && event.type === \"mousedown\") {\n        return;\n      }\n\n\n      /**\n       * Verify if the current element already has a ripple wrapper element and\n       * creates if it doesn't\n       */\n      if(!($element.find(\".ripple-container\").length)) {\n        $element.append(\"<div class=\\\"ripple-container\\\"></div>\");\n      }\n\n\n      /**\n       * Find the ripple wrapper\n       */\n      var $wrapper = $element.children(\".ripple-container\");\n\n\n      /**\n       * Get relY and relX positions\n       */\n      var relY = self.getRelY($wrapper, event);\n      var relX = self.getRelX($wrapper, event);\n\n\n      /**\n       * If relY and/or relX are false, return the event\n       */\n      if(!relY && !relX) {\n        return;\n      }\n\n\n      /**\n       * Get the ripple color\n       */\n      var rippleColor = self.getRipplesColor($element);\n\n\n      /**\n       * Create the ripple element\n       */\n      var $ripple = $(\"<div></div>\");\n\n      $ripple\n      .addClass(\"ripple\")\n      .css({\n        \"left\": relX,\n        \"top\": relY,\n        \"background-color\": rippleColor\n      });\n\n\n      /**\n       * Append the ripple to the wrapper\n       */\n      $wrapper.append($ripple);\n\n\n      /**\n       * Make sure the ripple has the styles applied (ugly hack but it works)\n       */\n      (function() { return window.getComputedStyle($ripple[0]).opacity; })();\n\n\n      /**\n       * Turn on the ripple animation\n       */\n      self.rippleOn($element, $ripple);\n\n\n      /**\n       * Call the rippleEnd function when the transition \"on\" ends\n       */\n      setTimeout(function() {\n        self.rippleEnd($ripple);\n      }, 500);\n\n\n      /**\n       * Detect when the user leaves the element\n       */\n      $element.on(\"mouseup mouseleave touchend\", function() {\n        $ripple.data(\"mousedown\", \"off\");\n\n        if($ripple.data(\"animating\") === \"off\") {\n          self.rippleOut($ripple);\n        }\n      });\n\n    });\n  };\n\n\n  /**\n   * Get the new size based on the element height/width and the ripple width\n   */\n  Ripples.prototype.getNewSize = function($element, $ripple) {\n\n    return (Math.max($element.outerWidth(), $element.outerHeight()) / $ripple.outerWidth()) * 2.5;\n  };\n\n\n  /**\n   * Get the relX\n   */\n  Ripples.prototype.getRelX = function($wrapper,  event) {\n    var wrapperOffset = $wrapper.offset();\n\n    if(!self.isTouch()) {\n      /**\n       * Get the mouse position relative to the ripple wrapper\n       */\n      return event.pageX - wrapperOffset.left;\n    } else {\n      /**\n       * Make sure the user is using only one finger and then get the touch\n       * position relative to the ripple wrapper\n       */\n      event = event.originalEvent;\n\n      if(event.touches.length === 1) {\n        return event.touches[0].pageX - wrapperOffset.left;\n      }\n\n      return false;\n    }\n  };\n\n\n  /**\n   * Get the relY\n   */\n  Ripples.prototype.getRelY = function($wrapper, event) {\n    var wrapperOffset = $wrapper.offset();\n\n    if(!self.isTouch()) {\n      /**\n       * Get the mouse position relative to the ripple wrapper\n       */\n      return event.pageY - wrapperOffset.top;\n    } else {\n      /**\n       * Make sure the user is using only one finger and then get the touch\n       * position relative to the ripple wrapper\n       */\n      event = event.originalEvent;\n\n      if(event.touches.length === 1) {\n        return event.touches[0].pageY - wrapperOffset.top;\n      }\n\n      return false;\n    }\n  };\n\n\n  /**\n   * Get the ripple color\n   */\n  Ripples.prototype.getRipplesColor = function($element) {\n\n    var color = $element.data(\"ripple-color\") ? $element.data(\"ripple-color\") : window.getComputedStyle($element[0]).color;\n\n    return color;\n  };\n\n\n  /**\n   * Verify if the client browser has transistion support\n   */\n  Ripples.prototype.hasTransitionSupport = function() {\n    var thisBody  = document.body || document.documentElement;\n    var thisStyle = thisBody.style;\n\n    var support = (\n      thisStyle.transition !== undefined ||\n      thisStyle.WebkitTransition !== undefined ||\n      thisStyle.MozTransition !== undefined ||\n      thisStyle.MsTransition !== undefined ||\n      thisStyle.OTransition !== undefined\n    );\n\n    return support;\n  };\n\n\n  /**\n   * Verify if the client is using a mobile device\n   */\n  Ripples.prototype.isTouch = function() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  };\n\n\n  /**\n   * End the animation of the ripple\n   */\n  Ripples.prototype.rippleEnd = function($ripple) {\n    $ripple.data(\"animating\", \"off\");\n\n    if($ripple.data(\"mousedown\") === \"off\") {\n      self.rippleOut($ripple);\n    }\n  };\n\n\n  /**\n   * Turn off the ripple effect\n   */\n  Ripples.prototype.rippleOut = function($ripple) {\n    $ripple.off();\n\n    if(self.hasTransitionSupport()) {\n      $ripple.addClass(\"ripple-out\");\n    } else {\n      $ripple.animate({\"opacity\": 0}, 100, function() {\n        $ripple.trigger(\"transitionend\");\n      });\n    }\n\n    $ripple.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\", function() {\n      $ripple.remove();\n    });\n  };\n\n\n  /**\n   * Turn on the ripple effect\n   */\n  Ripples.prototype.rippleOn = function($element, $ripple) {\n    var size = self.getNewSize($element, $ripple);\n\n    if(self.hasTransitionSupport()) {\n      $ripple\n      .css({\n        \"-ms-transform\": \"scale(\" + size + \")\",\n        \"-moz-transform\": \"scale(\" + size + \")\",\n        \"-webkit-transform\": \"scale(\" + size + \")\",\n        \"transform\": \"scale(\" + size + \")\"\n      })\n      .addClass(\"ripple-on\")\n      .data(\"animating\", \"on\")\n      .data(\"mousedown\", \"on\");\n    } else {\n      $ripple.animate({\n        \"width\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n        \"height\": Math.max($element.outerWidth(), $element.outerHeight()) * 2,\n        \"margin-left\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n        \"margin-top\": Math.max($element.outerWidth(), $element.outerHeight()) * (-1),\n        \"opacity\": 0.2\n      }, 500, function() {\n        $ripple.trigger(\"transitionend\");\n      });\n    }\n  };\n\n\n  /**\n   * Create the jquery plugin function\n   */\n  $.fn.ripples = function(options) {\n    return this.each(function() {\n      if(!$.data(this, \"plugin_\" + ripples)) {\n        $.data(this, \"plugin_\" + ripples, new Ripples(this, options));\n      }\n    });\n  };\n\n})(jQuery, window, document);\n","var lastKey = false;\nvar lastTime = false;\nvar json = [];\n\n$( document ).ready(function() {\n    hideAllCommandExtras();\n    $('.admin select#command').change(function(){\n        showCommandExtra();\n    });\n    showCommandExtra();\n    keyLogger();\n});\n\nfunction hideAllCommandExtras() {\n    $('.admin .command-extra').hide();\n}\n\nfunction showCommandExtra() {\n    hideAllCommandExtras();\n    var command = $('.admin select#command option:selected').val();\n    $('.admin div#'+command).show();\n    json = [];\n    lastKey = false;\n    lastTime = false;\n}\n\nfunction keyLogger()\n{\n\t$(document).keydown(function(event){\n\t\tif (!lastTime) {\n\t\t\tlastTime = (new Date()).getTime();\n\t\t\tswitch(event.which){\n\t\t\t\tcase 49: //1\n\t\t\t\tcase 50: //2\n\t\t\t\tcase 51: //3\n\t\t\t\tcase 78: //n\n\t\t\t\t\tlastKey = event.which;\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlastKey = false;\n\t\t\t}\t\t\n\t\t}\n\t});\n\n\t$(document).keyup(function(event){\n\t\tif (lastKey == event.which) {\n \t\t\tvar delta = (new Date()).getTime() - lastTime;\n\t\t\tswitch(event.which){\n\t\t\t\tcase 49: //1\n\t\t\t\t\tled = \"green\";\n\t\t\t\tbreak;\n\t\t\t\tcase 50: //2\n\t\t\t\t\tled = \"orange\";\n\t\t\t\tbreak;\n\t\t\t\tcase 51: //3\n\t\t\t\t\tled = \"red\";\n\t\t\t\tbreak;\n\t\t\t\tcase 78: //n\n\t\t\t\t\tled = \"clear\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tjson.push({'led':led,'time':delta/1000});\n\t\t\t$('.admin div#compose textarea#json').text(JSON.stringify(json));\n\t\t}\n\t\tlastTime = false;\n\t});\n}"],"sourceRoot":"/source/"}